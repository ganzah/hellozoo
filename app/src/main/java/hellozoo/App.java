/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hellozoo;

import java.io.IOException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import org.apache.zookeeper.CreateMode;
import org.apache.zookeeper.ZooDefs;
import org.apache.zookeeper.ZooKeeper;

public class App {

    public static final String ZNODE_SERVIDORES = "/servers";
    public static final String STRING_CONEXAO = "localhost:2181";

    public static void main(String[] args) throws Exception {
        try (var zookeeper = new ZooKeeper(STRING_CONEXAO, 3000, System.out::println)) {
            if (zookeeper.exists(ZNODE_SERVIDORES, false) == null) {
                zookeeper.create(ZNODE_SERVIDORES, "Grupo de servidores".getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
            }
        }

        try (var executor = Executors.newCachedThreadPool()) {
            var servidor1 = iniciar("servidor1", executor);
            var servidor2 = iniciar("servidor2", executor);
            var servidor3 = iniciar("servidor3", executor);
            parar(servidor1);
            parar(servidor2);
            parar(servidor3);
        }        
    }

    private static void parar(Servidor server1) throws InterruptedException {
        server1.parar();
        Thread.sleep(5_000);
    }

    private static Servidor iniciar(String name, ExecutorService executor) throws IOException, InterruptedException {
        var server1 = new Servidor(name, STRING_CONEXAO);
        executor.execute(server1);
        Thread.sleep(5_000);
        return server1;
    }
}
